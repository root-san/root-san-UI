/* tslint:disable */
/* eslint-disable */
/**
 * root-san API
 * 割り勘アプリ
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Event } from './Event';
import {
    EventFromJSON,
    EventFromJSONTyped,
    EventToJSON,
} from './Event';
import type { Member } from './Member';
import {
    MemberFromJSON,
    MemberFromJSONTyped,
    MemberToJSON,
} from './Member';
import type { Result } from './Result';
import {
    ResultFromJSON,
    ResultFromJSONTyped,
    ResultToJSON,
} from './Result';

/**
 * 
 * @export
 * @interface RoomDetails
 */
export interface RoomDetails {
    /**
     * 
     * @type {string}
     * @memberof RoomDetails
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof RoomDetails
     */
    name: string;
    /**
     * 
     * @type {Array<Member>}
     * @memberof RoomDetails
     */
    members: Array<Member>;
    /**
     * 
     * @type {Array<Event>}
     * @memberof RoomDetails
     */
    events: Array<Event>;
    /**
     * 
     * @type {Array<Result>}
     * @memberof RoomDetails
     */
    results: Array<Result>;
    /**
     * 
     * @type {Date}
     * @memberof RoomDetails
     */
    createdAt: Date;
}

/**
 * Check if a given object implements the RoomDetails interface.
 */
export function instanceOfRoomDetails(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "members" in value;
    isInstance = isInstance && "events" in value;
    isInstance = isInstance && "results" in value;
    isInstance = isInstance && "createdAt" in value;

    return isInstance;
}

export function RoomDetailsFromJSON(json: any): RoomDetails {
    return RoomDetailsFromJSONTyped(json, false);
}

export function RoomDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoomDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'members': ((json['members'] as Array<any>).map(MemberFromJSON)),
        'events': ((json['events'] as Array<any>).map(EventFromJSON)),
        'results': ((json['results'] as Array<any>).map(ResultFromJSON)),
        'createdAt': (new Date(json['createdAt'])),
    };
}

export function RoomDetailsToJSON(value?: RoomDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'members': ((value.members as Array<any>).map(MemberToJSON)),
        'events': ((value.events as Array<any>).map(EventToJSON)),
        'results': ((value.results as Array<any>).map(ResultToJSON)),
        'createdAt': (value.createdAt.toISOString()),
    };
}

